name: CI/CD

on:
  push:
    branches: [main, "*pipeline*"]
  pull_request:
    branches: [main]

jobs:
  frontend-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Run frontend tests
        run: |
          cd frontend
          npm test

  backend-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Install pangocairo
        run: sudo apt-get install libsdl-pango-dev

      - name: Set up Python
        run: |
          cd backend
          uv python install
          uv sync

      - name: Run backend tests
        run: |
          cd backend
          uv run pytest tests

  deploy-frontend:
    needs: [frontend-tests, backend-tests]
    if: github.ref == 'refs/heads/main' # Only deploy on main branch
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Run frontend build
        run: |
          cd frontend
          npm run build

      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          firebaseServiceAccount: "${{ secrets.GCP_DEPLOY_SERVICE_ACCOUNT_KEY }}"
          projectId: ctrl-mac-simulator
          channelId: live
          entryPoint: frontend

  deploy-backend:
    needs: [frontend-tests, backend-tests]
    if: github.ref == 'refs/heads/main' # Only deploy on main branch
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ctrl-mac-simulator
          service_account_key: ${{ secrets.GCP_DEPLOY_SERVICE_ACCOUNT_KEY }}
          export_default_credentials: true

      - name: Configure Docker for GCP
        run: gcloud auth configure-docker

      - name: Build Docker image
        run: |
          cd backend
          docker build -t europe-west4-docker.pkg.dev/ctrl-mac-simulator/ctrl-mac-simulator-backend/backend:${{ github.sha }} .

      - name: Push Docker image to Container Registry
        run: |
          docker push europe-west4-docker.pkg.dev/ctrl-mac-simulator/ctrl-mac-simulator-backend/backend:${{ github.sha }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy backend \
            --image=europe-west4-docker.pkg.dev/ctrl-mac-simulator/ctrl-mac-simulator-backend/backend:${{ github.sha }} \
            --allow-unauthenticated \
            --port=8080 \
            --service-account=github-action-frontend-deploy@ctrl-mac-simulator.iam.gserviceaccount.com \
            --max-instances=1 \
            --region=europe-west4 \
            --project=ctrl-mac-simulator
